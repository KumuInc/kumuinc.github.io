<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Kumu Tech Blog]]></title>
  <link href="http://kumuinc.github.io/atom.xml" rel="self"/>
  <link href="http://kumuinc.github.io/"/>
  <updated>2015-03-16T11:16:54+09:00</updated>
  <id>http://kumuinc.github.io/</id>
  <author>
    <name><![CDATA[Kumu Inc.]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[RubyMineでPowを使いながらDebugする方法]]></title>
    <link href="http://kumuinc.github.io/blog/2015/01/24/rubymine-pow/"/>
    <updated>2015-01-24T14:26:27+09:00</updated>
    <id>http://kumuinc.github.io/blog/2015/01/24/rubymine-pow</id>
    <content type="html"><![CDATA[<h2>はじめに</h2>

<p>Railsアプリのブラウザテストなどをしていると <a href="http://localhost:3000">http://localhost:3000</a> とかでアクセスしたりしますよね。LAN内の他のマシンやスマートフォン実機から見たいとか、複数プロジェクト同時にアクセスしたいからポート変えて&hellip;じゃあDNS立てないと&hellip;とかが面倒なので、その辺を一気にスマートに解決してくれたのが Powでした。Powを使うと <a href="http://myapp.dev/">http://myapp.dev/</a> といったURLで開発中のアプリにアクセスする事ができます。</p>

<p>RubyMineでRailsを起動する場合は 普通に <a href="http://localhost:3000">http://localhost:3000</a> になってしまいます。Powを使ってスマートなURLを保ちつつRubymineで便利にデバッグしたいという要求があったので連携方法を調べてみました。</p>

<h2>まずは連携用のファイルを作る</h2>

<p>Rails Project 直下に .powenvを作ります。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>.powenv
</span><span class='line'>
</span><span class='line'>export RUBY_DEBUG_PORT=1234
</span><span class='line'>export POW_WORKERS=1</span></code></pre></td></tr></table></div></figure>


<p>GemFileに下記のgemを追加します。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Gemfile
</span><span class='line'>
</span><span class='line'>gem 'ruby-debug-ide'
</span><span class='line'>gem 'debase'</span></code></pre></td></tr></table></div></figure>


<p>Powで起動されるように下記のようなファイルを作ります。
Rails なら config/initializers に任意の名前で作成します。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>./config/initializers/remote_debugger.rb
</span><span class='line'>
</span><span class='line'>if ENV['RUBY_DEBUG_PORT']
</span><span class='line'>  require 'ruby-debug-ide'
</span><span class='line'>  Debugger.start_server nil, ENV['RUBY_DEBUG_PORT'].to_i
</span><span class='line'>end</span></code></pre></td></tr></table></div></figure>


<h2>RubyMineのリモートデバッガ設定</h2>

<h3>RubyMineを起動してメニューの &ldquo;Run&rdquo; -> &ldquo;Edit Configurations&hellip;&rdquo; を選択</h3>

<p><img src="https://qiita-image-store.s3.amazonaws.com/0/11074/1cbb26a5-f52c-6151-356e-86359deb92ad.png" title="Run_と_Menubar.png" alt="Run_と_Menubar.png" /></p>

<h3>左上の + ボタンを押して Ruby remote debug を選択</h3>

<p><img src="https://qiita-image-store.s3.amazonaws.com/0/11074/a5c95fda-b437-0b47-9968-4d6d1bcca349.png" title="Run_Debug_Configurations.png" alt="Run_Debug_Configurations.png" /></p>

<h3>リモートデバッグ用の値設定</h3>

<p><img src="https://qiita-image-store.s3.amazonaws.com/0/11074/6c894db9-acab-9b2d-c46c-11ba15611a5c.png" title="Run_Debug_Configurations.png" alt="Run_Debug_Configurations.png" /></p>

<table>
<thead>
<tr>
<th style="text-align:left;"> 項目 </th>
<th style="text-align:left;"> 設定値 </th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left;">Remote host: </td>
<td style="text-align:left;"> localhost </td>
</tr>
<tr>
<td style="text-align:left;">Remote port: </td>
<td style="text-align:left;"> 1234 (.powenvで設定したポート番号) </td>
</tr>
<tr>
<td style="text-align:left;">Remote root folder: </td>
<td style="text-align:left;"> Railsプロジェクトのルートパス </td>
</tr>
<tr>
<td style="text-align:left;">Local port: </td>
<td style="text-align:left;"> デフォルトのままでOKです。 </td>
</tr>
<tr>
<td style="text-align:left;">Local root folder: </td>
<td style="text-align:left;"> Railsプロジェクトのルートパス </td>
</tr>
</tbody>
</table>


<p>と設定したらOKボタンを押して設定完了です。
(設定名はご自由に。ここでは Pow Debugにしました。)</p>

<h2>Debug実行</h2>

<h3>ターミナルで powder 再起動 &amp; オープン</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='Bash'><span class='line'><span class="nv">$ </span>powder restart
</span><span class='line'><span class="nv">$ </span>powder open
</span></code></pre></td></tr></table></div></figure>


<p>設定反映の為にpowder restartと、アプリケーション起動の為に ブラウザからのアクセスが必要です。</p>

<h3>RubyMine の Debugボタンを押してリモートデバッガを起動。</h3>

<p><img src="https://qiita-image-store.s3.amazonaws.com/0/11074/14b8fa85-5a12-c09a-4ed6-e7ce584a0b20.png" title="railsgirls_-____development_railsgirls_201412_railsgirls_.png" alt="railsgirls_-____development_railsgirls_201412_railsgirls_.png" /></p>

<p>※もし下のような画面がでたら powder open できてないか、しばらく時間が経ってため suspend状態になっているハズなので 再度 powder openしてアクセスしてからDebug実行してみてください。
<img src="https://qiita-image-store.s3.amazonaws.com/0/11074/534565e6-60b4-548b-c7c5-81307a6d2607.png" title="This_should_not_be_shown.png" alt="This_should_not_be_shown.png" /></p>

<blockquote><p>Couldn&rsquo;t Connect To Debugger
Cannot connect to the debugged process at port 1234 in 10s:</p></blockquote>

<h3>ブレークポイントで止めてみるなんて事も&hellip;</h3>

<p>これでリモートデバッグが可能な状態です。
たとえば、controllerにブレークポイントを置いて <a href="http://myapp.dev/">http://myapp.dev/</a> などのURLでアクセスしてみると、こんな風にちゃんと止まってくれます。値を覗き見る事もカンタンですね。</p>

<p><img src="https://qiita-image-store.s3.amazonaws.com/0/11074/1b1e36be-f913-94bb-663d-f8d0b0fb75c7.png" title="ideas_controller_rb_-_railsgirls_-____development_railsgirls_201412_railsgirls_.png" alt="ideas_controller_rb_-_railsgirls_-____development_railsgirls_201412_railsgirls_.png" /></p>

<p>ぜひどうしても powを使いながらデバッグしたい!! という時にお使いください。
この方法では
<a href="http://myapp.dev/">http://myapp.dev/</a> はもちろん
<a href="http://myapp.192.168.0.8.xip.io/">http://myapp.192.168.0.8.xip.io/</a>
という形式でもOK なので スマートフォン実機から開発機にアクセスしてデバッグしたい&hellip;なんていう時には便利かもしれませんね。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[会社設立]]></title>
    <link href="http://kumuinc.github.io/blog/2014/04/01/init/"/>
    <updated>2014-04-01T14:26:27+09:00</updated>
    <id>http://kumuinc.github.io/blog/2014/04/01/init</id>
    <content type="html"><![CDATA[<p>Kumu Inc. を設立しました。</p>
]]></content>
  </entry>
  
</feed>
